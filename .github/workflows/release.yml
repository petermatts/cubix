name: Cubix Release

on:
    workflow_dispatch:
        inputs:
            tag:
                description: "Release tag (e.g. v1.2.3)"
                required: true
            release_name:
                description: "Release name"
                required: false
            description:
                description: "Release description / changelog"
                required: false
            prerelease:
                description: "Is this a prerelease?"
                required: false
                default: "false"

jobs:
    build-linux:
        name: Build (Linux)
        runs-on: ubuntu-latest
        env:
            BUILD_DIR: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y cmake g++-13 gcc-13 build-essential

            - name: Set compiler
              run: |
                  echo "CC=gcc-13" >> $GITHUB_ENV
                  echo "CXX=g++-13" >> $GITHUB_ENV

            - name: Configure
              run: cmake -S . -B ${{ env.BUILD_DIR }} -DCMAKE_BUILD_TYPE=Release

            - name: Build
              run: cmake --build ${{ env.BUILD_DIR }} --config Release

            - name: Package artifact
              run: |
                  cd ${{ env.BUILD_DIR }}
                  tar -czf ../cubix-linux.tar.gz *

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: cubix-linux
                  path: cubix-linux.tar.gz

    build-windows:
        name: Build (Windows)
        runs-on: windows-latest
        env:
            BUILD_DIR: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Configure
              run: cmake -S . -B ${{ env.BUILD_DIR }} -DCMAKE_BUILD_TYPE=Release

            - name: Build
              run: cmake --build ${{ env.BUILD_DIR }} --config Release

            - name: Package artifact
              run: |
                  Compress-Archive -Path $env:BUILD_DIR\* -DestinationPath cubix-windows.zip

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: cubix-windows
                  path: cubix-windows.zip

    build-macos:
        name: Build (macOS)
        runs-on: macos-latest
        env:
            BUILD_DIR: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Install dependencies
              run: brew install swig

            - name: Configure
              run: cmake -S . -B ${{ env.BUILD_DIR }} -DCMAKE_BUILD_TYPE=Release

            - name: Build
              run: cmake --build ${{ env.BUILD_DIR }} --config Release

            - name: Package artifact
              run: |
                  cd ${{ env.BUILD_DIR }}
                  tar -czf ../cubix-macos.tar.gz *

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: cubix-macos
                  path: cubix-macos.tar.gz

    release:
        name: Create GitHub Release
        runs-on: ubuntu-latest
        needs: [build-linux, build-windows, build-macos]
        steps:
            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: artifacts

            - name: Display downloaded artifacts (for debug)
              run: ls -R artifacts

            - name: Create Release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ github.event.inputs.tag }}
                  name: ${{ github.event.inputs.release_name || github.event.inputs.tag }}
                  prerelease: ${{ github.event.inputs.prerelease == 'true' }}
                  files: |
                      artifacts/cubix-linux/cubix-linux.tar.gz
                      artifacts/cubix-windows/cubix-windows.zip
                      artifacts/cubix-macos/cubix-macos.tar.gz
